(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{116:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(2),i=n(6),o=(n(0),n(131)),r={id:"testing-with-routing",title:"Testing With Routing"},c={id:"testing-with-routing",title:"Testing With Routing",description:"For components which use routing, there is a special factory available that extends the default one, and provides a stubbed `ActivatedRoute` so that you can configure additional routing options.",source:"@site/docs/testing-with-routing.md",permalink:"/spectator/docs/testing-with-routing",editUrl:"https://github.com/ngneat/spectator/edit/master/docs/docs/testing-with-routing.md",sidebar:"docs",previous:{title:"Testing With Http",permalink:"/spectator/docs/testing-with-http"},next:{title:"Testing Modules",permalink:"/spectator/docs/testing-modules"}},l=[{value:"Triggering a navigation",id:"triggering-a-navigation",children:[]},{value:"Integration testing with <code>RouterTestingModule</code>",id:"integration-testing-with-routertestingmodule",children:[]},{value:"Routing Options",id:"routing-options",children:[]}],s={rightToc:l};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"For components which use routing, there is a special factory available that extends the default one, and provides a stubbed ",Object(o.b)("inlineCode",{parentName:"p"},"ActivatedRoute")," so that you can configure additional routing options."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"describe('ProductDetailsComponent', () => {\n  let spectator: SpectatorRouting<ProductDetailsComponent>;\n  const createComponent = createRoutingFactory({\n    component: ProductDetailsComponent,\n    params: { productId: '3' },\n    data: { title: 'Some title' }\n  });\n\n  beforeEach(() => spectator = createComponent());\n\n  it('should display route data title', () => {\n    expect(spectator.query('.title')).toHaveText('Some title');\n  });\n\n  it('should react to route changes', () => {\n    spectator.setRouteParam('productId', '5');\n\n     // your test here...\n  });\n});\n")),Object(o.b)("h3",{id:"triggering-a-navigation"},"Triggering a navigation"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"SpectatorRouting")," API includes convenient methods for updating the current route:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"interface SpectatorRouting<C> extends Spectator<C> {\n  /**\n   * Simulates a route navigation by updating the Params, QueryParams and Data observable streams.\n   */\n  triggerNavigation(options?: RouteOptions): void;\n\n  /**\n   * Updates the route params and triggers a route navigation.\n   */\n  setRouteParam(name: string, value: string): void;\n\n  /**\n   * Updates the route query params and triggers a route navigation.\n   */\n  setRouteQueryParam(name: string, value: string): void;\n\n  /**\n   * Updates the route data and triggers a route navigation.\n   */\n  setRouteData(name: string, value: string): void;\n\n  /**\n   * Updates the route fragment and triggers a route navigation.\n   */\n  setRouteFragment(fragment: string | null): void;\n}\n")),Object(o.b)("h3",{id:"integration-testing-with-routertestingmodule"},"Integration testing with ",Object(o.b)("inlineCode",{parentName:"h3"},"RouterTestingModule")),Object(o.b)("p",null,"If you set the ",Object(o.b)("inlineCode",{parentName:"p"},"stubsEnabled")," option to ",Object(o.b)("inlineCode",{parentName:"p"},"false"),", you can pass a real routing configuration\nand setup an integration test using the ",Object(o.b)("inlineCode",{parentName:"p"},"RouterTestingModule")," from Angular."),Object(o.b)("p",null,"Note that this requires promises to resolve. One way to deal with this, is by making your test async:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"describe('Routing integration test', () => {\n  const createComponent = createRoutingFactory({\n    component: MyComponent,\n    declarations: [OtherComponent],\n    stubsEnabled: false,\n    routes: [\n      {\n        path: '',\n        component: MyComponent\n      },\n      {\n        path: 'foo',\n        component: OtherComponent\n      }\n    ]\n  });\n\n  it('should navigate away using router link', async () => {\n    const spectator = createComponent();\n\n    // wait for promises to resolve...\n    await spectator.fixture.whenStable();\n\n    // test the current route by asserting the location\n    expect(spectator.get(Location).path()).toBe('/');\n\n    // click on a router link\n    spectator.click('.link-1');\n\n    // don't forget to wait for promises to resolve...\n    await spectator.fixture.whenStable();\n\n    // test the new route by asserting the location\n    expect(spectator.get(Location).path()).toBe('/foo');\n  });\n});\n")),Object(o.b)("h3",{id:"routing-options"},"Routing Options"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"createRoutesFactory")," function can take the following options, on top of the default Spectator options:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"params"),": initial params to use in ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"queryParams"),": initial query params to use in ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"data"),": initial data to use in ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"url"),": initial URL segments to use in ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"root"),": the value for ",Object(o.b)("inlineCode",{parentName:"li"},"root")," for the ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"parent"),": the value for ",Object(o.b)("inlineCode",{parentName:"li"},"parent")," for the ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"children"),": the value for ",Object(o.b)("inlineCode",{parentName:"li"},"children")," for the ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"firstChild"),": the value for ",Object(o.b)("inlineCode",{parentName:"li"},"firstChild")," for the ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"fragment"),": initial fragment to use in ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"stubsEnabled")," (default: ",Object(o.b)("inlineCode",{parentName:"li"},"true"),"): enables the ",Object(o.b)("inlineCode",{parentName:"li"},"ActivatedRoute")," stub, if set to ",Object(o.b)("inlineCode",{parentName:"li"},"false")," it uses ",Object(o.b)("inlineCode",{parentName:"li"},"RouterTestingModule")," instead"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"routes"),": if ",Object(o.b)("inlineCode",{parentName:"li"},"stubsEnabled")," is set to false, you can pass a ",Object(o.b)("inlineCode",{parentName:"li"},"Routes")," configuration for ",Object(o.b)("inlineCode",{parentName:"li"},"RouterTestingModule"))))}u.isMDXComponent=!0},131:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),u=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},p=function(e){var t=u(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,m=p["".concat(r,".").concat(d)]||p[d]||b[d]||o;return n?i.a.createElement(m,c({ref:t},s,{components:n})):i.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var s=2;s<o;s++)r[s]=n[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);