(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{110:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(2),i=n(6),c=(n(0),n(131)),o={id:"testing-directives",title:"Testing Directives"},a={id:"testing-directives",title:"Testing Directives",description:"There is a special test factory for testing directives. Let's say we have the following directive:",source:"@site/docs/testing-directives.md",permalink:"/spectator/docs/testing-directives",editUrl:"https://github.com/ngneat/spectator/edit/master/docs/docs/testing-directives.md",sidebar:"docs",previous:{title:"Testing Components",permalink:"/spectator/docs/testing-components"},next:{title:"Testing Pipes",permalink:"/spectator/docs/testing-pipes"}},s=[{value:"Setting factory defaults",id:"setting-factory-defaults",children:[]}],l={rightToc:s};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"There is a special test factory for testing directives. Let's say we have the following directive:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"@Directive({ selector: '[highlight]' })\nexport class HighlightDirective {\n\n  @HostBinding('style.background-color') backgroundColor : string;\n\n  @HostListener('mouseover')\n  onHover() {\n    this.backgroundColor = '#000000';\n  }\n\n  @HostListener('mouseout')\n  onLeave() {\n    this.backgroundColor = '#ffffff';\n  }\n}\n")),Object(c.b)("p",null,"Let's see how we can test directives easily with Spectator:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"describe('HighlightDirective', () => {\n  let spectator: SpectatorDirective<HighlightDirective>;\n  const createDirective = createDirectiveFactory(HighlightDirective);\n\n  beforeEach(() => {\n    spectator = createDirective(`<div highlight>Testing Highlight Directive</div>`);\n  });\n\n  it('should change the background color', () => {\n    spectator.dispatchMouseEvent(spectator.element, 'mouseover');\n\n    expect(spectator.element).toHaveStyle({\n      backgroundColor: 'rgba(0,0,0, 0.1)'\n    });\n\n    spectator.dispatchMouseEvent(spectator.element, 'mouseout');\n    expect(spectator.element).toHaveStyle({\n      backgroundColor: '#fff'\n    });\n  });\n\n  it('should get the instance', () => {\n    const instance = spectator.directive;\n    expect(instance).toBeDefined();\n  });\n});\n")),Object(c.b)("h3",{id:"setting-factory-defaults"},"Setting factory defaults"),Object(c.b)("p",null,"It is also possible to set a default template when creating the factory. Here is an example:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"describe('DirectiveProviderDirective', () => {\n  const createDirective = createDirectiveFactory({\n    directive: HighlightDirective,\n    template: `<div class=\"default\" directiveProvider>Testing Directive Providers</div>`\n  });\n\n  it('should get the instance', () => {\n    const spectator = createDirective();\n    const instance = spectator.directive;\n    expect(instance).toBeDefined();\n  });\n});\n")))}p.isMDXComponent=!0},131:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return g}));var r=n(0),i=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a({},t,{},e)),n},u=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},f=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,g=u["".concat(o,".").concat(f)]||u[f]||d[f]||c;return n?i.a.createElement(g,a({ref:t},l,{components:n})):i.a.createElement(g,a({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,o[1]=a;for(var l=2;l<c;l++)o[l]=n[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);